[core]
	editor = \"$LOCALAPPDATA\\Programs\\Microsoft VS Code\\bin\\code\" --wait
	autocrlf = true
[user]
	email = shauntanzongzhi@gmail.com
	name = EvitanRelta
[rebase]
	autosquash = true
[alias]
    cum = "!~/.git-aliases/cum/script.sh"
    cumane = "!~/.git-aliases/cumane/script.sh"
    cane = "!~/.git-aliases/cane/script.sh"
    st = "!~/.git-aliases/st/script.sh"
    pop = "!~/.git-aliases/pop/script.sh"
    rebun = "!~/.git-aliases/rebun/script.sh"
    addn = "!~/.git-aliases/addn/script.sh"
    git = "!~/.git-aliases/git/script.sh"
    get-current-branch = "!~/.git-aliases/.helper_functions/get-current-branch/script.sh"
    get-current-hash = "!~/.git-aliases/.helper_functions/get-current-hash/script.sh"
    branch-exists = "!~/.git-aliases/.helper_functions/branch-exists/script.sh"
    is-ancestor = "!~/.git-aliases/.helper_functions/is-ancestor/script.sh"
    is-rebasing = "!~/.git-aliases/.helper_functions/is-rebasing/script.sh"
    is-merging = "!~/.git-aliases/.helper_functions/is-merging/script.sh"
    is-cherry-picking = "!~/.git-aliases/.helper_functions/is-cherry-picking/script.sh"
    is-reverting = "!~/.git-aliases/.helper_functions/is-reverting/script.sh"
    has-unmerged = "!~/.git-aliases/.helper_functions/has-unmerged/script.sh"

    re = "!~/.git-aliases/re/script.sh"

    undoc = "!~/.git-aliases/undoc/script.sh"

    dump = "!~/.git-aliases/dump/script.sh"
    
    link = "!~/.git-aliases/link/script.sh"
    
    clone-nonempty = "!~/.git-aliases/clone-nonempty/script.sh"
    
    stash-unstaged = "!~/.git-aliases/stash-unstaged/script.sh"
    
    stash-staged = "!~/.git-aliases/stash-staged/script.sh"

    pull-all = "!~/.git-aliases/pull-all/script.sh"
    
    pull-force = "!~/.git-aliases/pull-force/script.sh"

    merge-this = "!~/.git-aliases/merge-this/script.sh"
    
    branch-d-both = "!~/.git-aliases/branch-d-both/script.sh"

    get-deleted-branch = "!cd "${GIT_PREFIX:-.}"; f() {         \
        if [ $# -eq 1 ]; then                                   \
            commit_subject=$(git log --format=%s -n 1 \"$1\")   \
                && branch_name=$(grep -Po \"(?<=')[^']+(?=')\" <<< \"$commit_subject\" | head -1) \
                && git checkout -b \"$branch_name\" \"$1^2\"    \
                && git checkout -;                              \
        else                                                    \
            echo Invalid parameters;                            \
        fi;                                                     \
    }; f"

    unmerge = "!~/.git-aliases/unmerge/script.sh"

    get-in-prog-cmd = "!cd "${GIT_PREFIX:-.}"; f() {\
        if git is-rebasing; then                    \
            echo rebase;                            \
        elif git is-merging; then                   \
            echo merge;                             \
        elif git is-cherry-picking; then            \
            echo cherry-pick;                       \
        elif git is-reverting; then                 \
            echo revert;                            \
        else                                        \
            >&2 echo \"Not currently rebasing, merging, cherry-picking nor revert\"; \
            exit 1;                                 \
        fi;                                         \
    }; f"

    con = "!cd "${GIT_PREFIX:-.}"; f() {            \
        in_prog_cmd=\"$(git get-in-prog-cmd)\"      \
            && echo \"Continuing $in_prog_cmd...\"  \
            && eval \"git $in_prog_cmd --continue\";\
    }; f"

    cone = "!cd "${GIT_PREFIX:-.}"; f() {           \
        in_prog_cmd=\"$(git get-in-prog-cmd)\"      \
            && echo \"Continuing $in_prog_cmd (no edit)...\"                \
            && eval \"git -c core.editor=true $in_prog_cmd --continue\";    \
    }; f"
    
    conea = "!cd "${GIT_PREFIX:-.}"; f() { git add -A && git cone; }; f"

    ab = "!cd "${GIT_PREFIX:-.}"; f() {             \
        in_prog_cmd=\"$(git get-in-prog-cmd)\"      \
            && echo \"Aborting $in_prog_cmd...\"    \
            && eval \"git $in_prog_cmd --abort\"    \
            || git has-unmerged                     \
            && echo \"...but has unmerged paths\"   \
            && echo \"Resetting unmerged paths...\" \
            && git reset --merge;                   \
    }; f"

    rebase-from = "!~/.git-aliases/rebase-from/script.sh"
    
    replace-with = "!~/.git-aliases/replace-with/script.sh"

    rebase-preserve = "!~/.git-aliases/rebase-preserve/script.sh"
    
    spoof-dates = "!~/.git-aliases/spoof-dates/script.sh"
