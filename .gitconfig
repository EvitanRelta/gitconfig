[core]
	editor = \"$LOCALAPPDATA\\Programs\\Microsoft VS Code\\bin\\code\" --wait
[user]
	email = shauntanzongzhi@gmail.com
	name = EvitanRelta
[alias]
    cum = "!cd "${GIT_PREFIX:-.}"; f() { git add .; git commit \"$@\"; }; f"
    cumane = "!cd "${GIT_PREFIX:-.}"; f() { git add .; git commit --amend --no-edit; }; f"
    cane = "!cd "${GIT_PREFIX:-.}"; f() { git commit --amend --no-edit; }; f"
    undoc = "!cd "${GIT_PREFIX:-.}"; f() { git reset --soft HEAD^; }; f"
    stat = "!cd "${GIT_PREFIX:-.}"; f() { git status; }; f"
    pop = "!cd "${GIT_PREFIX:-.}"; f() { git stash pop \"$@\"; }; f"
    rebun = "!cd "${GIT_PREFIX:-.}"; f() { GIT_SEQUENCE_EDITOR=\"perl -0777 -i -pe 's/^pick/$1/'\" git rebase -i $2; }; f"

    dump = "!cd "${GIT_PREFIX:-.}"; f() {           \
        if [ $# -eq 0 ]; then                       \
            git restore .;                          \
            git clean -df;                          \
        elif [ $# -eq 1 ] && [ $1 == "-f" ]; then   \
            git reset --quiet;                      \
            git restore .;                          \
            git clean -df;                          \
        else                                        \
            echo Invalid parameters;                \
        fi;                                         \
    }; f"
    
    link = "!cd "${GIT_PREFIX:-.}"; f() {           \
        if [ $# -eq 1 ] && [ $1 != "-f" ]; then     \
            git remote add origin $1;               \
            git remote set-url origin $1;           \
            git push -u origin master;              \
        elif [ $# -eq 2 ] && [ $1 == "-f" ]; then   \
            git remote add origin $2;               \
            git remote set-url origin $2;           \
            git push -uf origin master;             \
        else                                        \
            echo Invalid parameters;                \
        fi;                                         \
    }; f"
    
    clone-nonempty = "!cd "${GIT_PREFIX:-.}"; f() { \
        if [ $# -eq 2 ] && [ $1 != "-f" ]; then     \
            mkdir -p $2;                            \
            cd $2;                                  \
            git init;                               \
            git remote add origin $1;               \
            git fetch;                              \
            git checkout -t origin/master;          \
        elif [ $# -eq 3 ] && [ $1 == "-f" ]; then   \
            mkdir -p $3;                            \
            cd $3;                                  \
            rm -drf .git;                           \
            git init;                               \
            git remote add origin $2;               \
            git fetch;                              \
            git checkout -tf origin/master;         \
        else                                        \
            echo Invalid parameters;                \
        fi;                                         \
    }; f"
    
    stash-unstaged = "!cd "${GIT_PREFIX:-.}"; f() { \
        git stash --quiet --staged;                 \
        git stash -u \"$@\";                        \
        git stash pop --quiet \"stash@{1}\";        \
    }; f"

    pull-all-branches = "!cd "${GIT_PREFIX:-.}"; f() {  \
        git fetch -p;                                   \
        for remote in `git branch -r | grep -v \" -> \"`; do git branch --track ${remote#origin/} $remote; done;   \
        git fetch --all;                                \
        git pull --all;                                 \
    }; f"
    
    pull-force = "!cd "${GIT_PREFIX:-.}"; f() {     \
        git fetch --all;                            \
        git reset --hard \"origin/$(git branch --show-current)\"; \
    }; f"